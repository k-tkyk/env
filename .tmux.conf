set-window-option -g mode-keys emacs

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

# prefixキーをC-aに変更する
set -g prefix C-t

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# C-a*2でtmux内のプログラムにC-aを送る
#bind C-x send-prefix

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# mouse setting
set-option -g mouse on

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

#unbind -t emacs-copy MouseDragEnd1Pane

# sync clipboard
# for linux
if "which xclip" "bind-key -t emacs-copy C-w copy-pipe 'xclip -i -selection clipboard'"
if "which xclip" "bind-key -t emacs-copy M-w copy-pipe 'xclip -i -selection clipboard'"
if "which xclip" "bind-key ] run 'tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer'"
if "which xclip" "bind-key -t emacs-copy MouseDragEnd1Pane copy-pipe 'xclip -in -selection clipboard'"

#for mac
if "which pbcopy" "bind-key -t emacs-copy C-w copy-pipe 'pbcopy'"
if "which pbcopy" "bind-key -t emacs-copy M-w copy-pipe 'pbcopy'"
if "which pbpaste" "bind-key ] run 'tmux set-buffer -- \"$(pbpaste)\"; tmux paste-buffer'"
if "which pbcopy" "bind-key -t emacs-copy MouseDragEnd1Pane copy-pipe 'pbcopy'"
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
